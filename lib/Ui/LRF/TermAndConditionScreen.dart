import 'package:flutter/material.dart';import 'package:flutter_screenutil/flutter_screenutil.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:totem_app/GeneralUtils/ColorExtension.dart';import 'package:totem_app/GeneralUtils/Constant.dart';import 'package:totem_app/GeneralUtils/LabelStr.dart';import 'package:totem_app/Ui/Customs/ButtonRegular.dart';import 'package:get/get.dart';import 'package:totem_app/Ui/Profile/CreateProfile.dart';import 'package:totem_app/Utility/Impl/global.dart';import 'package:totem_app/Utility/UI/ColorPallete.dart';class TermAndConditionScreen extends StatefulWidget {  String type;  TermAndConditionScreen(this.type);  @override  _TermAndConditionScreenState createState() => _TermAndConditionScreenState();}class _TermAndConditionScreenState extends State<TermAndConditionScreen> {  @override  void initState() {    super.initState();  }  var isButtonLoaderEnabled = false.obs;  @override  Widget build(BuildContext context) {    return  WillPopScope(      onWillPop: () async{        Get.back(result: false);        return false;      },        child: Scaffold(      backgroundColor: screenBgColor,      body: Container(        child: Padding(          padding: EdgeInsets.only(top: ScreenUtil().setHeight(58),left: 30.0,right: 30.0),          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: <Widget>[              InkWell(onTap: (){                Get.back(result: false);              },                  child: Padding(                    padding: const EdgeInsets.all(dimen.paddingForBackArrow),                    child: SvgPicture.asset(MyImage.ic_cross),                  )),              Padding(                padding: EdgeInsets.only(top:ScreenUtil().setHeight(30)),                child: Text(                  widget.type == LabelStr.lblNew ? LabelStr.lblwelcome : LabelStr.lbltconditions,                  style: TextStyle(                      fontSize: 26,                      fontFamily: MyFont.Poppins_semibold,                      color: Colors.white                  ),                ),              ),             Expanded(child: Column(children: [               Padding(                 padding: EdgeInsets.only(top:ScreenUtil().setHeight(30)),                 child: Text(                   LabelStr.lbltermdetails,                   style: TextStyle(                       fontSize: 14,                       fontFamily: MyFont.poppins_regular,                       color: HexColor.textColor                   ),                 ),               ),               SizedBox(                 height: 20.0,               ),               Text(                 LabelStr.lblconditiondetails,                 style: TextStyle(                     fontSize: 14,                     fontFamily: MyFont.poppins_regular,                     color: HexColor.textColor                 ),               ),             ],)),              Container(                  margin: EdgeInsets.only(bottom:dimen.paddingBigLarge),                  child: ButtonRegular(                      buttonText: isButtonLoaderEnabled.value                          ? null                          : LabelStr.lblIAgree,                      onPressed: () {                        if(widget.type == LabelStr.lblNew) {                          Get.offAll(CreateProfile(                            isEdit: false,                          ));                        }else {                          Get.back(result: true);                        }                        //Navigator.pop(context,true);                      }))            ],          ),        ),      ),    ));  }}